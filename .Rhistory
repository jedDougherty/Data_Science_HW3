require(RPostgreSQL)
con <- dbConnect(PostgreSQL(), user="bibudh", host="199.91.168.116", port="5438", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(), user="jed", host="199.91.168.116", port="5436", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(), user="bibudh", host="199.91.168.116", port="5438", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(), user="jed", host="199.91.168.116", port="5436", dbname="casebook2_production");
?dbConnect
con <- dbConnect(PostgreSQL(), user="jed", host="199.91.168.116?ssl=TRUE", port="5436", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(), user="jed", host="199.91.168.116",ssl=TRUE, port="5436", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(), user="jed", host="199.91.168.116",ssl="TRUE", port="5436", dbname="casebook2_production");
??RPostgreSQL
con <- dbConnect(PostgreSQL(sslmode), user="jed", host="199.91.168.116",ssl="TRUE", port="5436", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(sslmode=TRUE), user="jed", host="199.91.168.116",ssl="TRUE", port="5436", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(),user="jed", host="199.91.168.116",sslmode="TRUE", port="5436", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(),user="jed", host="199.91.168.116",sslmode=TRUE, port="5436", dbname="casebook2_production");
services <- read.csv("~/services.txt")
View(services)
hist(services)
hist(services$count)
max(services$count)
?subset
most_s <- subset(services, count<50)
hist(most_s)
hist(most_s$count)
?hist
hist(most_s$count, breaks = 50)
names(services)
most_a <- subset(most_s, unit_of_work_type="assessment")
most_a <- subset(most_s, unit_of_work_type="case")
most_a <- subset(most_s, unit_of_work_type="Case")
most_a <- subset(most_s, unit_of_work_type=="Case")
c <- subset(services, unit_of_work_type=="Case")
a <- subset(services, unit_of_work_type=="Assessment")
most_c <- subset(c, count<50)
most_a <- subset(a, count<50)
hist_c <- hist(most_c$count, breaks = 50)
hist_a <- hist(most_a$count, breaks = 50)
info_c <- summary(c)
info_a <- summary(a)
?hist
hist_c <- hist(most_c$count, breaks = 50, main="Cases by Number of Services per Case" )
hist_c
x_lab="Number Services Per Case", y_lab="Number of Cases" )
x_lab="Number Services Per Case", y_lab="Number of Cases")
x_lab="Number Services Per Case", y_lab="Number of Cases")
x_lab="Number Services Per Case", y_lab="Number of Cases")
hist_c <- hist(most_c$count, breaks = 50, main="Cases by Number of Services per Case",
x_lab="Number Services Per Case", y_lab="Number of Cases")
?hist
hist_c <- hist(most_c$count, breaks = 50, main="Cases by Number of Services per Case",
xlab="Number Services Per Case", ylab="Number of Cases")
con <- dbConnect(PostgreSQL(),user="jed", host="localhost", port="5436", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(),user="jed", host="localhost", port="5438", dbname="casebook2_production");
con <- dbConnect(PostgreSQL(),user="jed", host="localhost", port="5438", dbname="casebook2_production")
con <- dbConnect(PostgreSQL(),user="jed",password="jh32h512bj_jaksfvn6" host="localhost", port="5438", dbname="casebook2_production")
con <- dbConnect(PostgreSQL(),user="jed",password="jh32h512bj_jaksfvn6", host="localhost", port="5438", dbname="casebook2_production")
con <- dbConnect(PostgreSQL(),user="jed",password="jh32h512bj_jaksfvn6", host="199.91.168.116", port="5438", dbname="casebook2_production")
con <- dbConnect(PostgreSQL(),user="jed",password="jh32h512bj_jaksfvn6", host="localhost", port="5438", dbname="casebook2_production")
info_c
info_s <- summary(services$count)
info_a
info_c <- summary(c$count)
info_a <- summary(a$count)
info_s <- summary(services$count)
info_a
info_s
c <- subset(services, unit_of_work_type=="Case")
a <- subset(services, unit_of_work_type=="Assessment")
most_c <- subset(c, count<50)
most_a <- subset(a, count<50)
most_s <- subset(services, count<50)
?subset
hist_c <- hist(most_c$count, breaks = 50, main="Cases by Number of Services per Case",
xlab="Number Services Per Case", ylab="Number of Cases")
hist_a <- hist(most_a$count, breaks = 50, main="Assessments by Number of Services per Assessment",
xlab="Number Services Per Assessments", ylab="Number of Assessments")
hist_s <- hist
info_c <- summary(c$count)
info_a <- summary(a$count)
info_s <- summary(services$count)
c <- subset(services, unit_of_work_type=="Case")
a <- subset(services, unit_of_work_type=="Assessment")
most_c <- subset(c, count<50)
most_a <- subset(a, count<50)
most_s <- subset(services, count<50)
?subset
hist_c <- hist(most_c$count, breaks = 50, main="Cases by Number of Services per Case",
xlab="Number of Services Per Case", ylab="Number of Cases")
hist_a <- hist(most_a$count, breaks = 50, main="Assessments by Number of Services per Assessment",
xlab="Number of Services Per Assessments", ylab="Number of Assessments")
hist_s <- hist
info_c <- summary(c$count)
info_a <- summary(a$count)
info_s <- summary(services$count)
c <- subset(services, unit_of_work_type=="Case")
a <- subset(services, unit_of_work_type=="Assessment")
most_c <- subset(c, count<50)
most_a <- subset(a, count<50)
most_s <- subset(services, count<50)
hist_c <- hist(most_c$count, breaks = 50, main="Cases by Number of Services per Case",
xlab="Number of Services Per Case", ylab="Number of Cases")
hist_a <- hist(most_a$count, breaks = 50, main="Assessments by Number of Services per Assessment",
xlab="Number of Services Per Assessments", ylab="Number of Assessments")
hist_s <- hist(most_s$count, breaks = 50, main="Assessments by Number of Services per Assessment",
xlab="Number of Services Per Assessments", ylab="Number of Assessments")
info_c <- summary(c$count)
info_a <- summary(a$count)
info_s <- summary(services$count)
info_a
hist_c
hist_c
hist_c
info_a
info_c
info_s
hist_c
hist(most_c$count, breaks = 50, main="Cases by Number of Services per Case",
xlab="Number of Services Per Case", ylab="Number of Cases")
hist(most_a$count, breaks = 50, main="Assessments by Number of Services per Assessment",
xlab="Number of Services Per Assessments", ylab="Number of Assessments")
hist(most_s$count, breaks = 50, main="Assessments by Number of Services per Assessment/Case",
xlab="Number of Services Per Assessment/Case", ylab="Number of Assessment/Case")
hist(most_c$count, breaks = 25, main="Cases by Number of Services per Case",
xlab="Number of Services Per Case", ylab="Number of Cases")
hist(most_a$count, breaks = 25, main="Assessments by Number of Services per Assessment",
xlab="Number of Services Per Assessments", ylab="Number of Assessments")
hist(most_s$count, breaks = 25, main="Assessments by Number of Services per Assessment/Case",
xlab="Number of Services Per Assessment/Case", ylab="Number of Assessment/Case")
?hist
most_c
info_c
info_s
info_c
info_a
info_s
hist_c
hist(most_c$count, breaks = 25, main="Cases by Number of Services per Case",
xlab="Number of Services Per Case", ylab="Number of Cases")
hist(most_a$count, breaks = 25, main="Assessments by Number of Services per Assessment",
xlab="Number of Services Per Assessments", ylab="Number of Assessments")
hist(most_s$count, breaks = 25, main="Assessments by Number of Services per Assessment/Case",
xlab="Number of Services Per Assessment/Case", ylab="Number of Assessment/Case")
hist(most_s$count, breaks = 25, main="Assessments and Cases",
xlab="Number of Services Per Assessment/Case", ylab="Number of Assessment/Case")
hist(most_s$count, breaks = 25, main="Assessments and Cases",
xlab="Number of Services Per Assessment or Case", ylab="Number of Assessments or Cases")
library("RJSONIO")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
tmp <- tmp[2:10]
tmp
holder <- fromJSON(tmp, nullValue = NA)
View(tmp)
View(holder)
fix(holder)
holder <- fromJSON(tmpp)
holder <- fromJSON(tmp)
tmp <- t(tmp)
holder <- fromJSON(tmp)
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
tmp <- tmp[2:10]
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
tmp <- tmp[2:10]
clas(tmp)
class(tmp)
class(tmp[2])
class(tmp[11])
class(tmp[19])
tmp[19]
tmp[20]
tmp[18]
tmp[9]
tmp[10]
tmp[1]
holder <- fromJSON(tmp[1:9])
library("RJSONIO")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
library("RJSONIO")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
tmp <- tmp[2:10]
tmp <- t(tmp)
holder = fromJSON(tmp[1:9])
holder
head(tmp)
close(con)
install.packages("RJSONIO")
library("RJSONIO")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 1000
tmp <- readLines(con, n.lines.to.read)
install.pachages("rjson")
install.packages("rjson")
library("rjson")
holder <- fromJSON(tmp)
holder <- fromJSON(tmp[2:10])
View(holder)
holder <- fromJSON(tmp[2:100])
View(tmp)
tmp <- tmp[2:10]
json_data <- fromJSON(paste(tmp, collapse=""))
View(holder)
json_data
json_file <- "http://webonastick.com/uscl/feeds/uscl.json.txt"
readLines(json_file)
k<-readLines(json_file)
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
View(k)
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
json_data
View(json_dat)
View(json_data)
load("~/Data_Science_HW2/loaded_base_data.RData")
install.packages("RJSONIO","foreach","plyr")
View(data)
json_data <- paste(fromJSON(tmp, collapse=""))
View(n.lines.to.read)
View(holder)
tmp <- readLines(con, n.lines.to.read)
tmp
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(readLines(tmp[i]), collapse=""))
articles <- append(articles, unlist(json_data))
}
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- append(articles, unlist(json_data))
}
articles
View(articles)
articles <- append(articles, unlist(trnslt$results))
View(z)
View(z)
rowNum
trnslt
View(trnslt)
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- append(articles, (json_data))
}
View(articles)
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i]))
articles <- append(articles, (json_data))
}
View(articles)
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i]))
articles <- nrow(articles, (json_data))
}
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i]))
articles <- nrow(articles, json_data)
}
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i]))
articles <- rbind(articles, json_data)
}
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i]))
articles <- cbind(articles, json_data)
}
?append
articles <- list()
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i]))
articles <- rbind(articles, json_data)
}
View(articles)
articles <- list()
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- rbind(articles, json_data)
}
View(articles)
articles <- list()
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- append(articles, json_data)
}
View(articles)
library("RJSONIO")
#library("rjson")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 1000
tmp <- readLines(con, n.lines.to.read)
for(i in 1:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- rbind(articles, json_data)
}
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- rbind(articles, json_data)
}
articles <- list()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- rbind(articles, json_data)
}
warnings()
View(articles)
??paste
?paste
articles <- list()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=" "))
articles <- rbind(articles, json_data)
}
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 1000
tmp <- readLines(con, n.lines.to.read)
tmp <- tmp[2:10]
articles <- list()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=" "))
articles <- rbind(articles, json_data)
}
View(articles)
library("RJSONIO")
#library("rjson")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 1000
tmp <- readLines(con, n.lines.to.read)
#tmp <- tmp[2:10]
articles <- list()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- rbind(articles, json_data)
}
View(articles)
library("RJSONIO")
#library("rjson")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
#tmp <- tmp[2:10]
articles <- list()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- rbind(articles, json_data)
}
View(articles)
fix(tmp)
Class(json_data)
class(json_data)
library("plyr")
library("RJSONIO")
library("plyr")
#library("rjson")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
#tmp <- tmp[2:10]
articles <- list()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- rbind.fill(articles, json_data)
}
View(articles)
articles <- list()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- rbind.fill(articles, json_data)
}
fix(articles)
library("plyr")
install.packages("plyr")
library("plyr")
library("RJSONIO")
library("plyr")
#library("rjson")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
#tmp <- tmp[2:10]
articles <- list()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
articles <- rbind.fill(articles, json_data)
}
View(articles)
articles <- rbind.fill(articles, json_data)
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
#tmp <- tmp[2:10]
articles <- data.frame()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
json_data <- as.data.frame(json_data)
articles <- rbind.fill(articles, json_data)
}
View(articles)
library("RJSONIO")
library("plyr")
#library("rjson")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n.lines.to.read <- 1000
tmp <- readLines(con, n.lines.to.read)
#tmp <- tmp[2:10]
articles <- data.frame()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
json_data <- as.data.frame(json_data)
articles <- rbind.fill(articles, json_data)
}
View(articles)
library("RJSONIO")
library("plyr")
#library("rjson")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
while(n < 1 ){
n <- readline("enter a positive integer: ")
n <- ifelse(grepl("\\D",n),-1,as.integer(n))
if(is.na(n)){break}  # breaks when hit enter
}
n.lines.to.read <- n
tmp <- readLines(con, n.lines.to.read)
#tmp <- tmp[2:10]
articles <- data.frame()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
json_data <- as.data.frame(json_data)
articles <- rbind.fill(articles, json_data)
}
View(articles)
while(n < 1 ){
n <- readline("enter a positive integer: ")
n <- ifelse(grepl("\\D",n),-1,as.integer(n))
if(is.na(n)){break}  # breaks when hit enter
}
n=0
while(n < 1 ){
n <- readline("enter a positive integer: ")
n <- ifelse(grepl("\\D",n),-1,as.integer(n))
if(is.na(n)){break}  # breaks when hit enter
}
n
library("RJSONIO")
library("plyr")
#library("rjson")
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n=0
while(n < 1 ){
n <- readline("enter a positive integer: ")
n <- ifelse(grepl("\\D",n),-1,as.integer(n))
if(is.na(n)){break}  # breaks when hit enter
}
n.lines.to.read <- n
tmp <- readLines(con, n.lines.to.read)
articles <- data.frame()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
json_data <- as.data.frame(json_data)
articles <- rbind.fill(articles, json_data)
}
View(articles)
library("RJSONIO")
library("plyr")
#library("rjson")
{
file.path <- "http://getglue-data.s3.amazonaws.com/getglue_sample.tar.gz"
con <- gzcon(url(file.path))
n=0
while(n < 1 ){
n <- readline("enter a positive integer: ")
n <- ifelse(grepl("\\D",n),-1,as.integer(n))
if(is.na(n)){break}  # breaks when hit enter
}
}
View(articles)
}
source(question_4.r)
source("question_4.r")
{
n.lines.to.read <- 10
tmp <- readLines(con, n.lines.to.read)
articles <- data.frame()
for(i in 2:length(tmp)){
json_data <- fromJSON(paste(tmp[i], collapse=""))
json_data <- as.data.frame(json_data)
articles <- rbind.fill(articles, json_data)
}
?scan
getwd()
setwd("/Users/jeddougherty/Data_Science_HW3")
getwd()
source("question_4_auto.R")
source("question_4_auto.R")
